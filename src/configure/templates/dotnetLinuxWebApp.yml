# .NET Web App to Linux on Azure
# Build a .NET Web App and deploy it to Azure as a Linux Web App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
- {{{ sourceRepository.branch }}}

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '{{{ targetResource.serviceConnectionId }}}'

  # Web App name
  webAppName: '{{{ targetResource.resource.name }}}'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Build Configuration
  buildConfiguration: 'Release'

  # Build Projects
  buildProjects: "**/*.csproj"

  # Test Projects
  testProjects: "**/*[Tt]est*/*.csproj"

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        publishWebProjects: true
        projects: $(buildProjects)

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: $(buildProjects)
        arguments: --configuration $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: $(testProjects)
        publishWebProjects: true
        arguments: --configuration $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
        zipAfterPublish: true

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(webAppName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRMWebAppDeployment@4
            displayName: "Deploy Azure Web App"
            inputs:
              ConnectionType: "AzureRM"
              ConnectedServiceName: $(azureSubscription)
              WebAppName: $(webAppName)
              WebAppKind: webAppLinux
              Package: $(Pipeline.Workspace)/**/*.zip
              DeploymentType: "webDeploy"
